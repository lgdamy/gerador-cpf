package com.damytec.view;

import com.damytec.pojo.Cpf;
import com.damytec.service.GeradorService;
import com.damytec.service.GithubService;
import com.damytec.ui.CustomButton;
import com.damytec.ui.MotionPanel;
import com.damytec.util.SimpleDocumentListener;

import javax.swing.*;
import java.awt.*;

/**
 * @author lgdamy@raiadrogasil.com on 22/01/2021
 */
public class MainWindow extends JFrame {
    private JPanel basePanel;
    private JTextField inputCpf;
    private JTextField dvField;
    private JTextField formattedField;
    private JTextField rawField;
    private JLabel validImage;
    private JLabel closeButton;
    private JLabel logoButton;
    private GeradorService service;

    private ImageIcon ok;
    private ImageIcon nok;
    private ImageIcon logo;

    private static final int WIDTH = 400;
    private static final int HEIGHT = 200;

    public MainWindow() {
        $$$setupUI$$$();
        this.buildImages();
        this.buildFrame();
        service = GeradorService.getInstance();
        inputCpf.getDocument().addDocumentListener(inputListener());
    }

    private void buildFrame() {
        this.setIconImage(logo.getImage());
        this.add(basePanel);
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setBounds((dim.width - WIDTH) / 2, (dim.height - HEIGHT) / 2, 400, 200);
        this.setUndecorated(true);
        this.setVisible(true);
        this.setResizable(false);
    }

    private SimpleDocumentListener inputListener() {
        return e -> {
            Cpf pojo = service.calcularDV(inputCpf.getText());
            if (!pojo.isValid()) {
                Toolkit.getDefaultToolkit().beep();
            }
            validImage.setIcon(pojo.isValid() ? ok : nok);
            validImage.setVisible(true);
            dvField.setText(pojo.getDv());
            rawField.setText(pojo.getRaw());
            formattedField.setText(pojo.getFormatted());
        };
    }

    private void buildImages() {
        this.ok = new ImageIcon(MainWindow.class.getClassLoader().getResource("images/ok.gif"));
        this.nok = new ImageIcon(MainWindow.class.getClassLoader().getResource("images/nok.png"));
        this.logo = new ImageIcon(MainWindow.class.getClassLoader().getResource("images/logo.png"));
    }

    private void createUIComponents() {
        basePanel = new MotionPanel(this);
        closeButton = new CustomButton("images/close.png") {
            @Override
            public void actionPerformed() {
                System.exit(0);
            }
        };
        logoButton = new CustomButton("images/logomini.png") {
            @Override
            public void actionPerformed() {
                GithubService.getInstance().openGithub();
            }
        };
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        basePanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setBackground(new Color(-4276546));
        basePanel.add(panel1, BorderLayout.NORTH);
        logoButton.setIcon(new ImageIcon(getClass().getResource("/images/logomini.png")));
        panel1.add(logoButton, BorderLayout.WEST);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, 20, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setHorizontalAlignment(0);
        label1.setText("GERADOR DE CPF");
        panel1.add(label1, BorderLayout.CENTER);
        final JSeparator separator1 = new JSeparator();
        separator1.setOrientation(0);
        panel1.add(separator1, BorderLayout.SOUTH);
        closeButton.setIcon(new ImageIcon(getClass().getResource("/images/close.png")));
        panel1.add(closeButton, BorderLayout.EAST);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        basePanel.add(panel2, BorderLayout.CENTER);
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null));
        final JLabel label2 = new JLabel();
        label2.setText("CPF");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        panel2.add(label2, gbc);
        inputCpf = new JTextField();
        inputCpf.setColumns(9);
        inputCpf.setToolTipText("Digite um cpf sem os digitos");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(inputCpf, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("DV");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label3, gbc);
        dvField = new JTextField();
        dvField.setColumns(2);
        dvField.setEditable(false);
        dvField.setEnabled(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(dvField, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Formatado");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        panel2.add(label4, gbc);
        formattedField = new JTextField();
        formattedField.setColumns(14);
        formattedField.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(formattedField, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Cru");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        panel2.add(label5, gbc);
        rawField = new JTextField();
        rawField.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(rawField, gbc);
        validImage = new JLabel();
        validImage.setFocusable(false);
        validImage.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        panel2.add(validImage, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel3.setBackground(new Color(-16187308));
        basePanel.add(panel3, BorderLayout.SOUTH);
        final JLabel label6 = new JLabel();
        label6.setBackground(new Color(-859392));
        Font label6Font = this.$$$getFont$$$(null, -1, 10, label6.getFont());
        if (label6Font != null) label6.setFont(label6Font);
        label6.setForeground(new Color(-859392));
        label6.setText("Damy Tecnologia da Informação LTDA");
        panel3.add(label6, BorderLayout.WEST);
        final JLabel label7 = new JLabel();
        Font label7Font = this.$$$getFont$$$(null, -1, 10, label7.getFont());
        if (label7Font != null) label7.setFont(label7Font);
        label7.setForeground(new Color(-859392));
        label7.setText("30.281.367/0001-91");
        panel3.add(label7, BorderLayout.EAST);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return basePanel;
    }
}
